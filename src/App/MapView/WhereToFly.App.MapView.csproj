<Project Sdk="MSBuild.Sdk.Extras/3.0.44">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;MonoAndroid12.0</TargetFrameworks>
    <TargetFrameworks Condition=" '$(OS)' == 'Windows_NT' ">$(TargetFrameworks);uap10.0.19041</TargetFrameworks>
    <Description>Where-to-fly App MapView</Description>
    <Nullable>warnings</Nullable>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
  </PropertyGroup>

  <!-- NuGet package properties -->
  <PropertyGroup>
    <PackageId>$(NuGetPackagePrefix).$(AssemblyName)</PackageId>
    <PackageLicenseExpression>BSD-2-Clause</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/vividos/WhereToFly/tree/main/src/App/MapView</PackageProjectUrl>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Remove="**" />
    <Compile Include="*.cs" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="Xamarin.Essentials" Version="1.7.3" />
    <PackageReference Include="Xamarin.Forms" Version="5.0.0.2515" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
    <Compile Include="netstandard\*.cs" />
  </ItemGroup>

  <!-- copy assets from the WebLib project -->
  <Target Name="CopyAssets" BeforeTargets="_CreateManagedLibraryResourceArchive">
    <ItemGroup>
      <AssetSourceFiles Include="../../Shared/WebLib/dist/**/*.*"
                        Exclude="../../Shared/WebLib/dist/**/*.map" />
    </ItemGroup>
    <Message Text="Copying Assets..." />
    <Copy UseHardlinksIfPossible="true"
          SourceFiles="@(AssetSourceFiles)"
          DestinationFolder="$(MSBuildThisFileDirectory)Assets/weblib/%(RecursiveDir)" />
    <!-- dynamically add copied files to the AndroidAsset item group -->
    <CreateItem Include="$(MSBuildThisFileDirectory)Assets/weblib/**/*.*">
      <Output TaskParameter="Include" ItemName="AndroidAsset" />
    </CreateItem>
  </Target>

  <Target Name="CleanAssets" AfterTargets="Clean">
    <Message Text="Deleting Assets folder..." />
    <RemoveDir Directories="$(MSBuildThisFileDirectory)Assets" />
  </Target>

  <!-- add assets as AndroidAsset -->
  <ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
    <Compile Include="android\*.cs" />
    <!-- need at least one file in AndroidAsset at .csproj load time, or the
        _CreateManagedLibraryResourceArchive target is not run at all -->
    <AndroidAsset Include="../../Shared/WebLib/Readme.md" />
    <AndroidAsset Include="Assets\**\*.*" />
  </ItemGroup>

  <!-- add UWP assets using Content build action -->
  <ItemGroup Condition=" $(TargetFramework.StartsWith('uap10.0')) ">
    <Compile Include="uwp\*.cs" />
    <Content Include="..\..\Shared\WebLib\dist-es5\**\*.*"
             Exclude="..\..\Shared\WebLib\dist-es5\**\*.map">
      <Link>Assets\weblib\%(RecursiveDir)\%(FileName)%(Extension)</Link>
    </Content>
    <SDKReference Include="WindowsMobile, Version=10.0.19041.0">
      <Name>Windows Mobile Extensions for the UWP</Name>
    </SDKReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Geo\WhereToFly.Geo.csproj" />
    <ProjectReference Include="..\..\Shared\Model\WhereToFly.Shared.Model.csproj">
      <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
      <IncludeAssets>WhereToFly.Shared.Model.dll</IncludeAssets>
    </ProjectReference>
    <ProjectReference Include="..\..\Shared\WebLib\WhereToFly.Shared.WebLib.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('ReferenceOutputAssembly', 'true'))"/>
    </ItemGroup>
  </Target>

</Project>
